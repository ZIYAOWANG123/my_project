#>
#> Attaching package: 'dplyr'
#> The following objects are masked from 'package:stats':
#>
#>     filter, lag
#> The following objects are masked from 'package:base':
#>
#>     intersect, setdiff, setequal, union
sf1 <- abs_ced %>%
st_simplify(dTolerance = 3000)
ms1 <- abs_ced %>%
sfheaders::sf_remove_holes() %>%
rmapshaper::ms_simplify(keep = 0.0001, keep_shapes = TRUE)
print(object.size(abs_ced))
print(object.size(sf1))
print(object.size(ms1))
data.frame(
Object = c("Original Data", "st_simplify", "ms_simplify"),
Size = c(object.size(abs_ced), object.size(sf1), object.size(ms1))
)
data.frame(
Object = c("Original Data", "st_simplify", "ms_simplify"),
Size = c(object.size(abs_ced), object.size(sf1), object.size(ms1)),
Unit = rep("bytes")
)
data.frame(
Object = c("Original Data", "st_simplify", "ms_simplify"),
Size = c(object.size(abs_ced), object.size(sf1), object.size(ms1)),
Unit = rep("bytes")
) %>%
kableExtra::kable()
data.frame(
Object = c("Original Data", "st_simplify", "ms_simplify"),
Size = c(object.size(abs_ced), object.size(sf1), object.size(ms1)),
Unit = rep("bytes")
) %>%
kableExtra::kable() %>%
kableExtra::kable_styling(bootstrap_options = c("striped", "hover", "condensed"))
data.frame(
Object = c("Original Data", "st_simplify", "ms_simplify"),
Size = c(object.size(abs_ced), object.size(sf1), object.size(ms1)),
Unit = rep("bytes")
) %>%
kableExtra::kable() %>%
kableExtra::kable_styling(bootstrap_options = c("striped", "hover", "condensed"), full_width = F, position = "center")
data.frame(
Object = c("Original Data", "st_simplify", "ms_simplify"),
Size = c(object.size(abs_ced), object.size(sf1), object.size(ms1)),
Unit = rep("bytes")
) %>%
kableExtra::kable() %>%
kableExtra::kable_styling(bootstrap_options = c("striped", "hover", "condensed"), full_width = T, position = "center")
data.frame(
Object = c("Original Data", "st_simplify", "ms_simplify"),
Size = c(object.size(abs_ced), object.size(sf1), object.size(ms1)),
Unit = rep("bytes")
) %>%
kableExtra::kable() %>%
kableExtra::kable_styling(bootstrap_options = c("striped", "hover", "condensed"), position = "center")
data.frame(
Object = c("Original Data", "st_simplify", "ms_simplify"),
Size = c(object.size(abs_ced), object.size(sf1), object.size(ms1)),
Unit = rep("bytes")
) %>%
kableExtra::kable() %>%
kableExtra::kable_styling(bootstrap_options = c("striped", "hover", "condensed"), full_width = F, position = "center",
font_size = 7)
data.frame(
Object = c("Original Data", "st_simplify", "ms_simplify"),
Size = c(object.size(abs_ced), object.size(sf1), object.size(ms1)),
Unit = rep("bytes")
) %>%
kableExtra::kable() %>%
kableExtra::kable_styling(bootstrap_options = c("striped", "hover", "condensed"), full_width = F, position = "center",
font_size = 16)
data.frame(
Object = c("Original Data", "st_simplify", "ms_simplify"),
Size = c(object.size(abs_ced), object.size(sf1), object.size(ms1)),
Unit = rep("bytes")
) %>%
kableExtra::kable() %>%
kableExtra::kable_styling(bootstrap_options = c("striped", "hover", "condensed"), full_width = F, position = "center",
font_size = 20)
devtools::install_github("thomasp85/transformr")
# code and data from https://github.com/emitanaka/ozhexmap
library(sf)
library(tidyverse)
library(gganimate)
ozmap <- readRDS("present/ozced.rds") %>%
as_tibble() %>%
left_join(hexmap::aec2022, by = c("name" = "division")) %>%
# note: pivot_longer has error:
# ! Can't combine `hex` <sfc_GEOMETRY> and `geometry` <sfc_GEOMETRY>.
# so use approach below
hexmap <- ozmap %>%
select(-geometry.x, -geometry.y) %>%
rename(geometry = hex) %>%
mutate(type = "hex")
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
Sys.setlocale("LC_ALL","English")
# Chunk 2
# code and data from https://github.com/emitanaka/ozhexmap
library(sf)
library(tidyverse)
library(gganimate)
ozmap <- readRDS("present/ozced.rds") %>%
as_tibble() %>%
left_join(hexmap::aec2022, by = c("name" = "division"))
# note: pivot_longer has error:
# ! Can't combine `hex` <sfc_GEOMETRY> and `geometry` <sfc_GEOMETRY>.
# so use approach below
hexmap <- ozmap %>%
select(-geometry.x, -geometry.y) %>%
rename(geometry = hex) %>%
mutate(type = "hex")
longmap <- ozmap %>%
select(-hex, -geometry.x, geometry = geometry.y) %>%
mutate(type = "choropleth") %>%
bind_rows(hexmap)
g <- ggplot(longmap) +
geom_sf(aes(geometry = st_make_valid(geometry), fill = winner),
color = "black") +
# facet_wrap(~type)  +
# theme_void() +
# labs(fill = "Winner") +
# scale_fill_manual(values = c("#e11f30", "#0952bf", "green4", "black"),
#                   limits = c("ALP", "LNP", "GRN", "Other")) +
# guides(fill = guide_legend(override.aes = list(size = 18)))+
transition_states(states = type)
#g
animate
gganimate::anim_save(filename = "present/images/ozhexmap.gif", g,
height = 600, width = 800)
g <- ggplot(longmap) +
geom_sf(aes(geometry = st_geometry(geometry), fill = winner),
color = "black") +
# facet_wrap(~type)  +
# theme_void() +
# labs(fill = "Winner") +
# scale_fill_manual(values = c("#e11f30", "#0952bf", "green4", "black"),
#                   limits = c("ALP", "LNP", "GRN", "Other")) +
# guides(fill = guide_legend(override.aes = list(size = 18)))+
transition_states(states = type)
g
g <- ggplot(longmap) +
geom_sf(aes(geometry = st_geometry(geometry), fill = winner),
color = "black") +
# facet_wrap(~type)  +
# theme_void() +
# labs(fill = "Winner") +
# scale_fill_manual(values = c("#e11f30", "#0952bf", "green4", "black"),
#                   limits = c("ALP", "LNP", "GRN", "Other")) +
# guides(fill = guide_legend(override.aes = list(size = 18)))+
transition_states(states = type, wrap = F)
gganimate::anim_save(filename = "present/images/ozhexmap.gif", g,
height = 600, width = 800)
View(ozmap)
ggplot(longmap) +
geom_sf(aes(geometry = st_geometry(geometry), fill = winner),
color = "black")
longmap <- ozmap %>%
select(-hex, -geometry.x, geometry = st_geometry(geometry.y)) %>%
mutate(type = "choropleth") %>%
bind_rows(hexmap)
longmap <- ozmap %>%
select(-hex, -geometry.x, geometry = geometry.y) %>%
mutate(type = "choropleth",
geometry = st_geometry(geometry)) %>%
bind_rows(hexmap)
View(longmap)
View(longmap[[8]][[1]])
g <- ggplot(longmap) +
geom_sf(aes(geometry = geometry, fill = winner),
color = "black") +
# facet_wrap(~type)  +
# theme_void() +
# labs(fill = "Winner") +
# scale_fill_manual(values = c("#e11f30", "#0952bf", "green4", "black"),
#                   limits = c("ALP", "LNP", "GRN", "Other")) +
# guides(fill = guide_legend(override.aes = list(size = 18)))+
transition_states(states = type)
gganimate::anim_save(filename = "present/images/ozhexmap.gif", g,
height = 600, width = 800)
iris
g <- ggplot(longmap) +
geom_sf(aes(geometry = geometry, fill = winner),
color = "black") +
# facet_wrap(~type)  +
# theme_void() +
# labs(fill = "Winner") +
# scale_fill_manual(values = c("#e11f30", "#0952bf", "green4", "black"),
#                   limits = c("ALP", "LNP", "GRN", "Other")) +
# guides(fill = guide_legend(override.aes = list(size = 18)))+
transition_states(states = type)+
ease_aes('cubic-in-out')
gganimate::anim_save(filename = "present/images/ozhexmap.gif", g,
height = 600, width = 800)
remotes::install_github("runapp-aus/strayr")
# Using normal choropleth
grid1 <-  hexmap::hex_grid(object = au, n_tiles = 151)
class(grid1)
library(hexmap)
# Using normal choropleth
grid1 <-  hexmap::hex_grid(object = au, n_tiles = 151)
# Using normal choropleth
grid1 <-  hexmap::hex_grid(object = au, n_tiles = 151)
# With cartogram distortion
grid2 <- hexmap::hex_grid(object = au_sf, n_tiles = 151)
# For a normal choropleth
grid3 <- hexmap::tile_allocate(object = au, tile = grid1)
# For a normal choropleth
grid3 <- hexmap::tile_allocate(object = au, tile = grid1)
library(hexmap)
# For a normal choropleth
grid3 <- hexmap::tile_allocate(object = au, tile = grid1)
library(sf)
# For a normal choropleth
grid3 <- hexmap::tile_allocate(object = au, tile = grid1)
# For a cartogram distortion
grid4 <- hexmap::tile_allocate(object = au_sf, tile = grid2)
grid_mix1 <- hexmap::tile_allocate(object = au, tile = grid2)
grid_mix2 <- hexmap::tile_allocate(object = au_sf, tile = grid1)
library(ggplot2)
a <- ggplot() +
geom_sf(data = au) +
geom_sf(data = grid1, fill = "steelblue", alpha = 0.2)+
theme_void()
ggplot2::ggsave(filename = "present/images/a.png", plot = a)
ggplot2::ggsave(filename = "present/images/a.png", plot = a)
a <- ggplot2::ggplot()+
geom_sf(data = au)+
geom_sf(data = grid3, aes(fill = StateAb, alpha = 0.2))+
guides(fill = guide_legend(override.aes = list(size = 20)))+
theme_void()
ggplot2::ggsave(filename = "present/images/a.png", plot = a)
ggplot2::ggsave(filename = "present/images/a.png", plot = a, dpi = 600)
a <- ggplot2::ggplot()+
geom_sf(data = au)+
geom_sf(data = grid3, aes(fill = StateAb, alpha = 0.2))+
guides(fill = guide_legend(override.aes = list(size = 20)))
ggplot2::ggsave(filename = "present/images/a.png", plot = a, dpi = 600)
a <- ggplot2::ggplot()+
geom_sf(data = au)+
geom_sf(data = grid3, aes(fill = StateAb, alpha = 0.2))+
guides(fill = guide_legend(override.aes = list(size = 20)))+
theme_bw()
ggplot2::ggsave(filename = "present/images/a.png", plot = a, dpi = 600)
a <- ggplot2::ggplot()+
geom_sf(data = au)+
geom_sf(data = grid3, aes(fill = StateAb, alpha = 0.2))+
guides(fill = guide_legend(override.aes = list(size = 20)))+
theme_void()
a
b <- ggplot2::ggplot()+
geom_sf(data = au_sf)+
geom_sf(data = grid4, aes(fill = StateAb, alpha = 0.2))+
guides(fill = guide_legend(override.aes = list(size = 20)))+
theme_void()
b
# plot mix ones
c <- ggplot2::ggplot()+
geom_sf(data = au_sf)+
geom_sf(data = grid_mix1, aes(fill = StateAb, alpha = 0.2))+
guides(fill = guide_legend(override.aes = list(size = 20)))+
theme_void()
c
d <- ggplot2::ggplot()+
geom_sf(data = au)+
geom_sf(data = grid_mix2, aes(fill = StateAb, alpha = 0.2))+
guides(fill = guide_legend(override.aes = list(size = 20)))+
theme_void()
d
a
ggplot2::ggplot()+
geom_sf(data = au)+
geom_sf(data = grid3, aes(fill = StateAb, alpha = 0.2))+
guides(fill = guide_legend(override.aes = list(size = 20)))+
theme_void()
ggplot2::ggplot()+
geom_sf(data = au_sf)+
geom_sf(data = grid4, aes(fill = StateAb, alpha = 0.2))+
guides(fill = guide_legend(override.aes = list(size = 20)))+
theme_void()
ggplot2::ggplot()+
geom_sf(data = au)+
geom_sf(data = grid3, aes(fill = StateAb, alpha = 0.2))+
theme(legend.text=element_text(size=18))+
theme_void()
ggplot2::ggplot()+
geom_sf(data = au)+
geom_sf(data = grid3, aes(fill = StateAb, alpha = 0.2))+
theme(legend.text=element_text(size=28))+
theme_void()
ggplot2::ggplot()+
geom_sf(data = au)+
geom_sf(data = grid3, aes(fill = StateAb, alpha = 0.2))+
theme(legend.text=element_text(size=28))+
guides(fill = guide_legend(override.aes = list(size = 20)))+
theme_void()
ggplot2::ggplot()+
geom_sf(data = au)+
geom_sf(data = grid3, aes(fill = StateAb, alpha = 0.2))+
theme(legend.text=element_text(size=28),
legend.position="bottom",
legend.text.align = 0)+
guides(fill = guide_legend(override.aes = list(size = 20)))+
theme_void()
ggplot2::ggplot()+
geom_sf(data = au_sf)+
geom_sf(data = grid4, aes(fill = StateAb, alpha = 0.2))+
theme(legend.text=element_text(size=28))+
guides(fill = guide_legend(override.aes = list(size = 28)))+
theme_void()
ggplot2::ggplot()+
geom_sf(data = au)+
geom_sf(data = grid3, aes(fill = StateAb, alpha = 0.2))+
theme(legend.text=element_text(size=30),
legend.position="bottom",
legend.text.align = 0)+
guides(fill = guide_legend(override.aes = list(size = 24)))+
theme_void()
ggplot2::ggplot()+
geom_sf(data = au_sf)+
geom_sf(data = grid4, aes(fill = StateAb, alpha = 0.2))+
theme(legend.text=element_text(size=30))+
guides(fill = guide_legend(override.aes = list(size = 10)))+
theme_void()
ggplot2::ggplot()+
geom_sf(data = au_sf)+
geom_sf(data = grid4, aes(fill = StateAb, alpha = 0.2))+
theme(legend.text=element_text(size=36))+
guides(fill = guide_legend(override.aes = list(size = 18)))+
theme_void()
ggplot2::ggplot()+
geom_sf(data = au)+
geom_sf(data = grid3, aes(fill = StateAb, alpha = 0.2))+
theme(legend.text=element_text(size=30))+
guides(fill = guide_legend(override.aes = list(size = 28)))+
theme_void()
geom_sf(data = au_sf)+
geom_sf(data = grid_mix1, aes(fill = StateAb, alpha = 0.2))+
theme(legend.text=element_text(size=30))+
guides(fill = guide_legend(override.aes = list(size = 28)))+
theme_void()
ggplot2::ggplot()+
geom_sf(data = au_sf)+
geom_sf(data = grid_mix1, aes(fill = StateAb, alpha = 0.2))+
theme(legend.text=element_text(size=30))+
guides(fill = guide_legend(override.aes = list(size = 28)))+
theme_void()
ggplot2::ggplot()+
geom_sf(data = au)+
geom_sf(data = grid_mix2, aes(fill = StateAb, alpha = 0.2))+
theme(legend.text=element_text(size=30))+
guides(fill = guide_legend(override.aes = list(size = 28)))+
theme_void()
tm_shape(result_aec_hex) +
tm_polygons("StateAb", palette = "viridis") +
tm_text("StateAb")
library(tidyverse)
library(sf)
library(tmap)
library(geogrid)
library(cartogram)
library(maptools)
tm_shape(result_aec_hex) +
tm_polygons("StateAb", palette = "viridis") +
tm_text("StateAb")
ggplot()+
geom_sf(data = au)+
geom_sf(data = grid3)+
geom_text(aes(fill = StateAb, alpha = 0.2))
theme(legend.text=element_text(size=30))+
guides(fill = guide_legend(override.aes = list(size = 28)))+
theme_void()
ggplot2::ggplot()+
geom_sf(data = au)+
geom_sf(data = grid3)+
geom_text(data = grid3, aes(fill = StateAb, alpha = 0.2))+
theme(legend.text=element_text(size=30))+
guides(fill = guide_legend(override.aes = list(size = 28)))+
theme_void()
tm_shape(result_cart_hex1) +
tm_polygons("StateAb", palette = "Dark2") +
tm_text("StateAb")+
tm_layout(legend.outside= T)
tm_shape(result_cart_hex1) +
tm_polygons("StateAb", palette = "viridis") +
tm_text("StateAb")+
tm_layout(legend.outside= T)
tm_shape(result_aec_hex) +
tm_polygons("StateAb", palette = "viridis") +
tm_text("StateAb")
tm_shape(result_cart_hex1) +
tm_polygons("StateAb", palette = "viridis") +
tm_text("StateAb")+
tm_layout(legend.outside= T)
tm_shape(result_cart_hex) +
tm_polygons("StateAb", palette = "viridis") +
tm_text("StateAb")
knitr::opts_chunk$set(echo = TRUE)
Sys.setlocale("LC_ALL","English")
library(sf)
library(tidyverse)
library(ggplot2)
library(hexmap)
library(dplyr)
australia <- ozmaps::abs_ste %>% filter(NAME != "Other Territories")
grid_au <- hex_grid(australia, n_tiles = 8)
grid_au <- tile_allocate(australia, grid_au)
ggplot() +
geom_sf(data = australia) +
geom_sf(data = grid_au, aes(fill = NAME), alpha = 0.2)
ggplot() +
geom_sf(data = australia) +
geom_sf(data = grid_au, aes(fill = NAME), alpha = 0.2)+
theme_bw()
ggplot2::ggplot()+
geom_sf(data = au_sf)+
geom_sf(data = grid4, aes(fill = StateAb, alpha = 0.2))+
theme(legend.text=element_text(size=30),
legend.title = element_text(size=26))+
theme_void()
library(hexmap)
library(sf)
library(ggplot2)
knitr::opts_chunk$set(echo = TRUE)
Sys.setlocale("LC_ALL","English")
ggplot2::ggplot()+
geom_sf(data = au)+
geom_sf(data = grid3, aes(fill = StateAb, alpha = 0.2))+
theme(legend.text=element_text(size=30))+
guides(fill = guide_legend(override.aes = list(size = 28)))+
theme_void()
ggplot2::ggplot()+
geom_sf(data = au)+
geom_sf(data = grid3, aes(fill = StateAb, alpha = 0.2))+
theme(legend.text=element_text(size=30))+
theme_void()
ggplot2::ggplot()+
geom_sf(data = au)+
geom_sf(data = grid3, aes(fill = StateAb, alpha = 0.2))+
theme(legend.text=element_text(size=30))+
theme_void()
ggplot2::ggplot()+
geom_sf(data = au_sf)+
geom_sf(data = grid4, aes(fill = StateAb, alpha = 0.2))+
theme(legend.text=element_text(size=30),
legend.title = element_text(size=26))+
theme_void()
longmap %>% filter(type == "choropleth") %>%
ggplot() +
geom_sf(aes(geometry = geometry, fill = winner),
color = "black") +
# facet_wrap(~type)  +
theme(legend.text=element_text(size=30),
legend.title = element_text(size=26))+
theme_void() +
labs(fill = "Winner") +
scale_fill_manual(values = c("#e11f30", "#0952bf", "green4", "black"),
limits = c("ALP", "LNP", "GRN", "Other"))
library(sf)
library(tidyverse)
library(gganimate)
ozmap <- readRDS("present/ozced.rds") %>%
as_tibble() %>%
left_join(hexmap::aec2022, by = c("name" = "division"))
# note: pivot_longer has error:
# ! Can't combine `hex` <sfc_GEOMETRY> and `geometry` <sfc_GEOMETRY>.
# so use approach below
hexmap <- ozmap %>%
select(-geometry.x, -geometry.y) %>%
rename(geometry = hex) %>%
mutate(type = "hex")
longmap <- ozmap %>%
select(-hex, -geometry.x, geometry = geometry.y) %>%
mutate(type = "choropleth",
geometry = st_geometry(geometry)) %>%
bind_rows(hexmap)
longmap %>% filter(type == "choropleth") %>%
ggplot() +
geom_sf(aes(geometry = geometry, fill = winner),
color = "black") +
# facet_wrap(~type)  +
theme(legend.text=element_text(size=30),
legend.title = element_text(size=26))+
theme_void() +
labs(fill = "Winner") +
scale_fill_manual(values = c("#e11f30", "#0952bf", "green4", "black"),
limits = c("ALP", "LNP", "GRN", "Other"))
# plot mix ones
ggplot2::ggplot()+
geom_sf(data = au_sf)+
geom_sf(data = grid_mix1, aes(fill = StateAb, alpha = 0.2))+
theme(legend.text=element_text(size=30))+
theme_void()
ggplot2::ggplot()+
geom_sf(data = au)+
geom_sf(data = grid_mix2, aes(fill = StateAb, alpha = 0.2))+
theme(legend.text=element_text(size=30))+
theme_void()
citation("hexmap")
citation("sf")
citation("cartogram")
citation("geogrid")
citation("dplyer")
citation("dplyr")
citation("sugerbag")
citation("quarto")
quarto publish quarto-pub
setwd("P:/school/ETC5543_project/my_project/report")
